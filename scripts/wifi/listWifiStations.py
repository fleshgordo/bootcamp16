import subprocess, glob, time, csv, random, argparse
import pprint
from collections import OrderedDict

"""
 * CSV parsing and some sorting functions to
 * Gordan Savicic 22.9.2016
 * HEAD MA Media Design Geneva

 * airodump-ng is running and logging the results into a csv file
 * command: sudo airodump-ng -o csv -w test mon0
 * Make sure you run it from the same folder as the python script
 * subprocess looks for the last edited csv file in current folder
"""

# pretty print is neat
pp = pprint.PrettyPrinter(indent=4)

# Look for latest CSV file
csvs=subprocess.Popen("ls -t1 *csv | head -1", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
csv_last=csvs.communicate()[0].strip()

# define global dictionaries
wifiStations = {}
wifiClients = {}

""" Sort a nested dictionary
    Keyword arguments:
    _dict -- the dict to be sorted
    _sortByKey -- the key of the nested dict
"""
def sortDictByKey(_dict, _sortByKey):
    _dict = OrderedDict(sorted(_dict.iteritems(), key=lambda x: x[:-1][_sortByKey]))
    return _dict

""" Reads a CSV file generated by airodump-ng and generates
    two dictionaries (stations/clients) with unique key based on the BSSID
    hardware MAC address

    Keyword arguments:
    dump -- filehandler to CSV file
"""
def lookup(dump):
    scan=open(dump, "rU")
    next(scan)
    scanDict=csv.DictReader((line.replace('\0','') for line in scan), delimiter=',')
    for aDict in scanDict:
        unwanted = ['', None, False, 'Station MAC','Last time seen','BSSID','Probed ESSIDs','First time seen','# packets','Power']
        aDictClean = {k.strip():v.strip() for k, v in aDict.iteritems() if v not in unwanted}
        # check if we have stations or clients
        if "# IV" in aDictClean.keys():
            wifiStations[aDictClean["BSSID"]] = aDictClean
        else:
            #print "clients"
            continue

    return sortDictByKey(wifiStations,"Power")

""" MAIN loop
    do stuff here ....
"""
if __name__ == "__main__":
    ### Endless loop
    while True:
        allStations = lookup(csv_last)
        for k, v in allStations.iteritems():
            print "Accesspoint: %s has Power: %s" %(allStations[k]["ESSID"], allStations[k]["Power"])
        time.sleep(3)
